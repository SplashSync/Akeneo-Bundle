################################################################################
#
#  This file is part of SplashSync Project.
#
#  Copyright (C) Splash Sync <www.splashsync.com>
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#
#  For the full copyright and license information, please view the LICENSE
#  file that was distributed with this source code.
#
#  @author Bernard Paquier <contact@splashsync.com>
#
################################################################################

################################################################
# Set any variables we need
variables:
    # Configure mysql environment variables (https://hub.docker.com/r/_/mysql/)
    MYSQL_DATABASE:         akeneo_pim
    MYSQL_ROOT_PASSWORD:    akeneo_pim
    MYSQL_USER:             akeneo_pim
    MYSQL_PASSWORD:         akeneo_pim
    COMPOSER_MEMORY_LIMIT:  -1
    SYMFONY_DEPRECATIONS_HELPER:  disabled

################################################################
# Defined Pipeline Stages
stages:
  - docker
  - quality
  - functional
#  - deploy

################################################################
# Build Docker Images for Testing
################################################################
docker:
    when:         manual
    stage:        docker
    image:        docker:stable
    tags:         [ Dedicated-Docker ]
    services:
      - docker:dind
    variables:
        IMAGE_TAG: "$CI_REGISTRY_IMAGE:$CI_JOB_NAME"
    before_script:
      - docker info
    script:
      ################################################################
      # Connect Docker to GitLab
      - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
      ################################################################
      # Build & Upload Splash Docker Image
      - docker build -t registry.gitlab.com/splashsync/akeneo-bundle:7.0 docker -f docker/akeneo-v7-php-8.1.Dockerfile
      - docker push registry.gitlab.com/splashsync/akeneo-bundle:7.0
    only:
      changes:
        - docker/**/*
        - .gitlab-ci.yml

################################################################
# Code Quality Tests
################################################################

.quality:    &quality
    when:       manual
    stage:      quality
    tags:
        - Dedicated
    services:
        - mysql:8.0
    ################################################################################
    # Install & Configure Environnement
    before_script:
        ################################################################################
        # Install Libs
        - bash docker/scripts/install-imagick.sh
        ################################################################################
        # Run Composer
        - composer require akeneo/pim-community-dev $AKENEO_VERSION --no-interaction --prefer-dist --no-scripts --no-plugins
    ################################################################################
    # Run Test Script
    script:
        # Execute Grumphp Testsuite
        - curl -s https://raw.githubusercontent.com/BadPixxel/Php-Sdk/main/ci/grumphp.sh  | sh
    ################################################################################
    # Run After Script
    after_script:
        - curl -s https://raw.githubusercontent.com/BadPixxel/Php-Sdk/main/ci/after.sh | sh

quality:v7-php-8.1:
    image: registry.gitlab.com/badpixxel-projects/php-sdk:php-8.1
    variables:
        AKENEO_VERSION:   ^7.0
    <<: *quality

#quality:v5-php-7.4:
#    image: registry.gitlab.com/badpixxel-projects/php-sdk:php-7.4
#    variables:
#        AKENEO_VERSION:   5.0.18
#    <<: *quality


################################################################
# Functional Tests
################################################################

.functional:    &functional
#    when:       manual
    stage:      functional
    tags:
        - Dedicated
    services:
        - name: mysql:8.0
          command: ['--default-authentication-plugin=mysql_native_password']
        - name: elasticsearch:7.5.1
          alias: elasticsearch
          command: [ "bin/elasticsearch", "-Expack.security.enabled=false", "-Ediscovery.type=single-node" ]
    artifacts:
        when: always
        reports:
            junit: "$CI_PROJECT_DIR/*-report.xml"
    ################################################################################
    # Install & Configure Environnement
    before_script:
      - cd /var/www/html
      ################################################################################
      # Check if Akeneo Core is Installed
      - bash /builds/SplashSync/Akeneo-Bundle/docker/scripts/install-akeneo-core.sh
      ################################################################################
      # Check if Akeneo Fixtures are Installed
      - bash /builds/SplashSync/Akeneo-Bundle/docker/scripts/install-akeneo-fixtures.sh
      ################################################################################
      # Install DEV Module
      - bash /builds/SplashSync/Akeneo-Bundle/docker/scripts/install-dev-module.sh
    ################################################################################
    # Run Test Script
    script:
      # Execute PhpUnit Tests
      - php vendor/bin/phpunit --version
      - php vendor/bin/phpunit --log-junit $CI_PROJECT_DIR/main-report.xml

tests:v7-php-8.1:
    image:        registry.gitlab.com/splashsync/akeneo-bundle:7.0
    variables:
        AKENEO_VERSION:   ^7.0
    <<: *functional

#tests:v5-php-7.4:
#  image:    akeneo/pim-php-dev:5.0
#  variables:
#        AKENEO_VERSION:   5.0.18
#  <<: *core_tests

#################################################################
## Build Documentation
#################################################################
#pages:
#    image:    registry.gitlab.com/badpixxel-projects/php-sdk:jekyll
#    stage:    deploy
#    tags:
#        - Dedicated
#    services:
#        - docker:dind
#    ################################################################################
#    # Run Test Script
#    script:
#        # Run Composer to Build deps
#        - curl -s https://raw.githubusercontent.com/BadPixxel/Php-Sdk/main/ci/composer.sh  | bash
#        # Build Documentation
#        - php vendor/bin/grumphp run --tasks=build-docs
#    artifacts:
#        paths:
#            - public