services: 
    
    ########################################################################
    # Akeneo Products Data Transformer
    # Convert In/Out Doctrine Objects Fields to Splash Standard Format
    splash.akeneo.object.product:
        class:      Splash\Akeneo\Objects\Product
        arguments:  
            -   "@pim_catalog.repository.product"
            -   "@splash.akeneo.product.crud"  
            -   "@splash.akeneo.product.attributes"
            -   "@splash.akeneo.product.variants"
            -   "@splash.akeneo.locales"  
            -   "@splash.akeneo.security"  
#            -   "@router"

##            -   "%splash_akeneo%"
#            -   "%catalog_storage_dir%"
        tags:
            # Register as Standalone Connector Object           
            - { name: "splash.standalone.object", type : "Product" }  
            
    ########################################################################
    # Akeneo Products Crud Manager
    splash.akeneo.product.crud:
        class:      Splash\Akeneo\Services\CrudService
        arguments:  
            -   "@pim_catalog.repository.product"
            -   "@pim_catalog.builder.product"
            -   "@pim_catalog.updater.product"
            -   "@pim_catalog.validator.product"
            -   "@pim_catalog.saver.product"
            -   "@pim_catalog.remover.product"
            -   "@splash.akeneo.product.variants"
            -   "@splash.akeneo.product.models"

    ########################################################################
    # Akeneo Products Crud Manager
    splash.akeneo.product.attributes:
        class:      Splash\Akeneo\Services\AttributesManager
        arguments:  
            -   "@pim_catalog.updater.property_setter"
            -   "@pim_catalog.repository.attribute"
            -   "@splash.akeneo.locales"  


    ########################################################################
    # Akeneo Products Variant Manager
    splash.akeneo.product.variants:
        class:      Splash\Akeneo\Services\VariantsManager
        arguments:  
            -   "@splash.akeneo.locales"
            -   "@pim_catalog.repository.family_variant"
            
    ########################################################################
    # Akeneo Products Models Manager
    splash.akeneo.product.models:
        class:      Splash\Akeneo\Services\ModelsManager
        arguments:  
            -   "@pim_catalog.repository.product_model"
            -   "@pim_catalog.factory.product_model"
            -   "@pim_catalog.updater.product_model"
            -   "@pim_catalog.validator.product_model"
            -   "@pim_catalog.saver.product_model"
            -   "@pim_catalog.remover.product_model"
            -   "@splash.akeneo.product.variants"

    ########################################################################
    # Akeneo Products Models Manager
    splash.akeneo.product.events:
        class:      Splash\Akeneo\EventSubscriber\ProductSubscriber
        autowire:   true
        tags:
            - { name: 'doctrine.event_subscriber', connection: 'default' }
            
    ########################################################################
    # Akeneo Connector Locales Manager
    splash.akeneo.locales:
        class:      Splash\Akeneo\Services\LocalesManager
        arguments:  
            -   "@=service('pim_catalog.repository.locale').getActivatedLocaleCodes()"  
         
    ########################################################################
    # Akeneo Connector Security Manager
    splash.akeneo.security:
        class:      Splash\Akeneo\Services\SecurityService
        autowire:   true
         
#    ########################################################################
#    # Sylius Additionnal Object Event Listener
#    # This Listner is Triggered on Any Object changes dont on ORM
#    # It will detect impacted Splash Objects and Dispatch Commits to Splash Server
#    Splash.Sylius.Objects.EventListener:
#        class:      Splash\Sylius\EventListener\ObjectEventListener
#        tags:
##            - { name: doctrine.event_listener, event: postPersist,  method: postPersist }
#            - { name: doctrine.event_listener, event: postUpdate,   method: postUpdate }
##            - { name: doctrine.event_listener, event: preRemove,    method: preRemove }
            